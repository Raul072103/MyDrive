basePath: /v1
definitions:
  main.DownloadFileRequestBody:
    properties:
      name:
        type: string
      path:
        type: string
    type: object
  main.SignedInUser:
    properties:
      email:
        type: string
      expires_in:
        type: integer
      token:
        type: string
      token_type:
        type: string
      username:
        type: string
    type: object
  main.UploadFileRequestBody:
    properties:
      file_size:
        type: integer
      name:
        type: string
      path:
        type: string
    type: object
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: API for MyDrive.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: MyDrive API
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Signs in a user
      parameters:
      - description: Basic authentication (Basic <base64-encoded-credentials>)
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: User successfully  logged in
          schema:
            $ref: '#/definitions/main.SignedInUser'
        "400":
          description: Invalid request
          schema: {}
        "401":
          description: Unauthorized
          schema: {}
        "500":
          description: Internal server error
          schema: {}
      summary: Signs in a user
      tags:
      - authentication
  /health/:
    get:
      consumes:
      - application/json
      description: Checks the health of the server
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "404":
          description: Internal Server Error
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: Checks the health of the server
      tags:
      - health
  /mydrive/myfiles:
    get:
      consumes:
      - application/json
      description: Downloads a file at the specified path.
      parameters:
      - description: Metadata about the file to download
        in: body
        name: downloadFileRequestBody
        required: true
        schema:
          $ref: '#/definitions/main.DownloadFileRequestBody'
      produces:
      - application/json
      responses:
        "200":
          description: Downloaded file successfully!
          schema:
            type: string
        "400":
          description: Bad request
          schema: {}
        "404":
          description: File not found/Internal server error
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: Downloads a file at the specified path.
      tags:
      - myfiles
    post:
      consumes:
      - application/json
      description: Uploads a file at the specified path.
      parameters:
      - description: Metadata about the file to download
        in: body
        name: uploadFileRequestBody
        required: true
        schema:
          $ref: '#/definitions/main.UploadFileRequestBody'
      produces:
      - application/json
      responses:
        "200":
          description: Uploaded file successfully!
          schema:
            type: string
        "400":
          description: Bad request
          schema: {}
        "404":
          description: Internal Server Error
          schema: {}
        "413":
          description: File too large
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: Uploads a file at the specified path.
      tags:
      - myfiles
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
